# name: Release Tag
# on:
#   push:
#     branches:
#       - master

# env:
#   SLACK_WEBHOOK_URL: "https://hooks.slack.com/services/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"

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#     - name: 버전 정보 추출
#       run: echo "##[set-output name=version;]$(echo '${{ github.event.head_commit.message }}' | egrep -o 'v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')"
#       id: extract_version_name       
#     - name: Release 생성 
#       uses: actions/create-release@v1
#       env: 
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with: 
#         echo: ${{ steps.extract_version_name.outputs.version }} 
#         tag_name: ${{ steps.extract_version_name.outputs.version }} 
#         release_name: ${{ steps.extract_version_name.outputs.version }}
#     - name: action-slack
#       uses: 8398a7/action-slack@v3
#       with:
#         status: ${{ job.status }}
#         author_name: ${{ steps.extract_version_name.outputs.version }} tag 생성
#         fields: repo, message, commit, author, action, eventName, ref, workflow, job, took
#       env:
#         SLACK_WEBHOOK_URL: ${{ env.SLACK_WEBHOOK_URL }}

name: Bump version
on:
  push:
    branches:
      - master # master branch로 push될 때 아래 action이 실행된다.
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.5 # 가져다 쓸 auto tagging 프로그램
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }} # secrets.GITHUB_TOKEN 는 자동생성됨

      - name: 버전 정보 추출1
        run: echo "##[set-output name=version;]$(echo '${{ github.event.head_commit.message }}' | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')"
        id: extract_version_name

      - name: Create a GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ steps.extract_version_name.outputs.version }}"
          release_name: "v${{ steps.extract_version_name.outputs.version }}"